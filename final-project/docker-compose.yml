version: '3'
services:
  postgres:
    container_name: postgres-db
    image: postgres
    hostname: postgres
    ports:
      - "6543:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: TEST_SM
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: daniel.fer.5986@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.9.13-management-alpine
    container_name: rabbitmq
    environment:
      - "RABBITMQ_DEFAULT_PASS=admin"
      - "RABBITMQ_DEFAULT_USER=admin"
    ports:
      - 15672:15672
      - 5672:5672
    restart: unless-stopped
    networks:
      - rabbitmq_go_net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3100:3000
    volumes:
      - ./data:/var/lib/grafana
    networks:
      - monitoring
    user: "1000"

networks:
  monitoring:
    driver: bridge
  rabbitmq_go_net:
    driver: bridge

volumes:
  prometheus_data: {}
  postgres-data:
